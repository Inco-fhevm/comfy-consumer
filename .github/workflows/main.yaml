name: Build Next.js Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: gcr.io
  PROJECT_ID: inco-core
  IMAGE_NAME: comfy-consumer

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate version tag for the Docker image (doesn't create git tag)
      - name: Generate version
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Use the existing tag if this is a tag push
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "Using tag: ${GITHUB_REF#refs/tags/}"
          else
            # Calculate a version based on latest tag + commit hash
            latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            commit_sha=$(git rev-parse --short HEAD)
            echo "VERSION=${latest_tag}-${commit_sha}" >> $GITHUB_ENV
            echo "Generated version: ${latest_tag}-${commit_sha}"
          fi

      # Authenticate to GCP
      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: 'projects/31238567061/locations/global/workloadIdentityPools/github-pool-core/providers/github-provider'

      # Set up gcloud CLI
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      # Configure Docker for GCR
      - name: Configure Docker
        run: |
          gcloud auth configure-docker gcr.io

      # Build and push using Docker
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
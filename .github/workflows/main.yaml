name: Build Next.js Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: gcr.io
  PROJECT_ID: inco-core
  IMAGE_NAME: comfy-consumer

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for creating tags
      id-token: write  # for GCP OIDC auth
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate version if not a tag push
      - name: Generate version
        id: version
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          
          # Increment patch version
          IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
          new_patch=$((${version_parts[2]} + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.$new_patch"
          
          echo "New version: v$new_version"
          echo "VERSION=v$new_version" >> $GITHUB_ENV
          
          # Create and push new tag
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v$new_version" -m "Release v$new_version"
          git push origin "v$new_version"

      # Get version from tag if tag push
      - name: Get version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Authenticate to GCP
      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: 'projects/31238567061/locations/global/workloadIdentityPools/github-pool-core/providers/github-provider'

      # Set up gcloud CLI
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      # Configure Docker for GCR
      - name: Configure Docker
        run: |
          gcloud auth configure-docker gcr.io

      # Build and push using Docker
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}